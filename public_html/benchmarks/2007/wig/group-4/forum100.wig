service {
/* begin htmls section */
  const html showIBS = <html> <body>harro!<p>
    <[message]><p>
    i0: <[i0]>  b0: <[b0]>  s0: <[s0]><p>
    i1: <[i1]>  b1: <[b1]>  s1: <[s1]>  </body> </html>;

  const html Done = <html> <body> Done! </body> </html>;

/* the htmls of the forum */
   const html Error = <html>Error!<p><[errorMessage]></html>;

   const html TopicList = <html><body>
      <head>
        <title>ForuM!</title>
        <link href="http://www.cs.mcgill.ca/~kalmar/comp520/topiclist.css"
              rel="stylesheet" >
      </head>
      <h1>COOL FORUM YA!</h1>
      <div class="topics">
      <[topics]>
      </div>
      <div><input type="radio" name="choice" value="create" >
         Create new topic
      </div>
      <div><input type="text" name="subject" >
         Subject
      </div>
      <div><input type="text" name="message">
         message
      </div>
      <div><input type="text" name="uname">
         username
      </div>
      <center><small>byootiful HTML by Jesse, brilliant forum logic by Anton, gobs of awful code generated by Kamal</small></center>
      </body></html>;

   const html Topic = <html><body>
      <head>
        <title><[topic]> - ForuM!</title>
        <link href="http://www.cs.mcgill.ca/~kalmar/comp520/topic.css"
              rel="stylesheet" >
      </head>
      <h1>topic: <[topic2]></h1>
      <[messages]>
      <div><input type="radio" name="choice" value="create" >
         Create new message
      </div>
      <div><input type="text" name="message" >
         message
      </div>
      <div><input type="text" name="uname" >
         username
      </div>
      <div><input type="radio" name="choice" value="topics" >
         back to topic list
      </div>
      <center><small>byootiful HTML by Jesse, brilliant forum logic by Anton, gobs of awful code generated by Kamal</small></center>
      </body></html>;
/* end htmls section */
/* begin schemas section */
   /* tuple for creating new message */
   schema New {
      string topic;
      string username;
      string message;
   }

   /* a schemata telling us what actions to do (i.e. given the receives of the webpages) */
   schema Action {
      string choice;
      string topic;
      string username;
      string message;
   }

  /* a schema for an error - for return valus of functions */
  schema Success {
    bool success;
    string errorMessage;
  }
schema IBS {
int i;
bool b;
string s;
}

schema Array {
int i0;
bool b0;
string s0;

int i1;
bool b1;
string s1;

int i2;
bool b2;
string s2;

int i3;
bool b3;
string s3;

int i4;
bool b4;
string s4;

int i5;
bool b5;
string s5;

int i6;
bool b6;
string s6;

int i7;
bool b7;
string s7;

int i8;
bool b8;
string s8;

int i9;
bool b9;
string s9;

int i10;
bool b10;
string s10;

int i11;
bool b11;
string s11;

int i12;
bool b12;
string s12;

int i13;
bool b13;
string s13;

int i14;
bool b14;
string s14;

int i15;
bool b15;
string s15;

int i16;
bool b16;
string s16;

int i17;
bool b17;
string s17;

int i18;
bool b18;
string s18;

int i19;
bool b19;
string s19;

int i20;
bool b20;
string s20;

int i21;
bool b21;
string s21;

int i22;
bool b22;
string s22;

int i23;
bool b23;
string s23;

int i24;
bool b24;
string s24;

int i25;
bool b25;
string s25;

int i26;
bool b26;
string s26;

int i27;
bool b27;
string s27;

int i28;
bool b28;
string s28;

int i29;
bool b29;
string s29;

int i30;
bool b30;
string s30;

int i31;
bool b31;
string s31;

int i32;
bool b32;
string s32;

int i33;
bool b33;
string s33;

int i34;
bool b34;
string s34;

int i35;
bool b35;
string s35;

int i36;
bool b36;
string s36;

int i37;
bool b37;
string s37;

int i38;
bool b38;
string s38;

int i39;
bool b39;
string s39;

int i40;
bool b40;
string s40;

int i41;
bool b41;
string s41;

int i42;
bool b42;
string s42;

int i43;
bool b43;
string s43;

int i44;
bool b44;
string s44;

int i45;
bool b45;
string s45;

int i46;
bool b46;
string s46;

int i47;
bool b47;
string s47;

int i48;
bool b48;
string s48;

int i49;
bool b49;
string s49;

int i50;
bool b50;
string s50;

int i51;
bool b51;
string s51;

int i52;
bool b52;
string s52;

int i53;
bool b53;
string s53;

int i54;
bool b54;
string s54;

int i55;
bool b55;
string s55;

int i56;
bool b56;
string s56;

int i57;
bool b57;
string s57;

int i58;
bool b58;
string s58;

int i59;
bool b59;
string s59;

int i60;
bool b60;
string s60;

int i61;
bool b61;
string s61;

int i62;
bool b62;
string s62;

int i63;
bool b63;
string s63;

int i64;
bool b64;
string s64;

int i65;
bool b65;
string s65;

int i66;
bool b66;
string s66;

int i67;
bool b67;
string s67;

int i68;
bool b68;
string s68;

int i69;
bool b69;
string s69;

int i70;
bool b70;
string s70;

int i71;
bool b71;
string s71;

int i72;
bool b72;
string s72;

int i73;
bool b73;
string s73;

int i74;
bool b74;
string s74;

int i75;
bool b75;
string s75;

int i76;
bool b76;
string s76;

int i77;
bool b77;
string s77;

int i78;
bool b78;
string s78;

int i79;
bool b79;
string s79;

int i80;
bool b80;
string s80;

int i81;
bool b81;
string s81;

int i82;
bool b82;
string s82;

int i83;
bool b83;
string s83;

int i84;
bool b84;
string s84;

int i85;
bool b85;
string s85;

int i86;
bool b86;
string s86;

int i87;
bool b87;
string s87;

int i88;
bool b88;
string s88;

int i89;
bool b89;
string s89;

int i90;
bool b90;
string s90;

int i91;
bool b91;
string s91;

int i92;
bool b92;
string s92;

int i93;
bool b93;
string s93;

int i94;
bool b94;
string s94;

int i95;
bool b95;
string s95;

int i96;
bool b96;
string s96;

int i97;
bool b97;
string s97;

int i98;
bool b98;
string s98;

int i99;
bool b99;
string s99;

}
/* end schemas section */
/* begin globals section */
/*
topics
- string: topic name
- int: index of last message in messages

messages
- string: message
- int: index of previous message in messages or -1 for first is first message

usernames
- string: username
- int: index of topic

*/
tuple Array topics;
tuple Array usernames;
tuple Array messages;
int messageCount;
int topicCount;
int arraySize; //should be initialized to the size of the array

/* end globals section */
/* begin functions section */
/* all sorts of useful functions */
/* some more helper functions for arrays*/

   string array_getString(tuple Array a,int n){
      tuple IBS ibs;
      ibs = array_get(a,n);
      return ibs.s;
   }

   int    array_getInt(tuple Array a,int n){
      tuple IBS ibs;
      ibs = array_get(a,n);
      return ibs.i;
   }

   bool   array_getBool(tuple Array a,int n){
      tuple IBS ibs;
      ibs = array_get(a,n);
      return ibs.b;
   }

    tuple Array array_setInt(tuple Array a, int n, int new) {
      tuple IBS ibs;
      ibs = array_get(a,n);
      ibs.i = new;
      return array_set(a,n,ibs);
    }
    tuple Array array_setBool(tuple Array a, int n, bool new) {
      tuple IBS ibs;
      ibs = array_get(a,n);
      ibs.b = new;
      return array_set(a,n,ibs);
    }
    tuple Array array_setString(tuple Array a, int n, string new) {
      tuple IBS ibs;
      ibs = array_get(a,n);
      ibs.s = new;
      return array_set(a,n,ibs);  
    }




   string genMessage(string uname, string body){
      string m;
      m = "<div class=\"msg\"><div class=\"uname\">";
      m = m + uname + "</div><div class=\"msgbody\">";
      m = m + body + "</div></div>";

      return m;
   }


   string genTopic(string topic){
      string m;
      m = "<div class=\"topiclistelement\">";
      m = m+ "<input type=\"radio\" name=\"choice\" value=\"";
      m = m + topic + "\" > "+topic+"</div>";

      return m;
   }


   /* functions for showing pages */
   string getTopicList(){
      string t;
      int i;
      t = "";
      i = 0;
      while(i<topicCount){
         tuple IBS ibs;
         ibs = (array_get(topics,i));
         t = t + genTopic(ibs.s);
         i = i+1;
      }
      return t;
   }


   /* given topic name, returns index in messages of last message, or -1 if not found */
   int findTopic(string topic){
      int i;
      i = 0;
      //loop through list of topics
      while((i<topicCount)&&(array_getString(topics,i)!=topic)){
        i = i+1;
      }
      //topic at i, or not found
      if (i == topicCount) return -1;
      //get index of last message
      return array_getInt(topics,i); //get index of last message
   }

   /* returns the topiclist generated by the function */
   string getTopic(string topic){
      string t;
      int i;
      t = "";
      //find topic
      i = findTopic(topic);
      //topic at i, or not found
      if (i == -1) return genMessage("","Topic "+topic+" not found!");
      //build message list
      while (i != -1){
        t = genMessage(array_getString(usernames,i),array_getString(messages,i)) + t;
        i = array_getInt(messages,i);
      }
      return t;
   }


   /* functions for manipulating the forum - returns true on success*/
   /* if a topic already exists, add a prime at the end ? or just error it*/
   tuple Success newTopic(tuple New new){
     int i;
     //check whether array is full
     if (messageCount == arraySize){
       return tuple 
         {success = false, 
          errorMessage = "Internet is full, thanks to wig! <p> Please try again in another 15 years."};
     }
     //check whether topic exists
     i = findTopic(new.topic);
     if (i != -1){
       tuple Success ok;
       ok.success = false;
       ok.errorMessage = "Error when creating topic: topic "+new.topic+" exists.";
       return ok;
     }
     //add topic
     topics = array_setString(topics,topicCount,new.topic); //set topic name
     topics = array_setInt(topics,topicCount,messageCount); //pointer to last message
     messages = array_setString(messages,messageCount,new.message); //set message
     messages = array_setInt(messages,messageCount,-1); //set first mesage (pointer to -1)
     usernames = array_setString(usernames,messageCount,new.username); //set username
     usernames = array_setInt(usernames,messageCount,topicCount); //set pointer to topic
     messageCount = messageCount+1;
     topicCount = topicCount+1;
     return tuple{success = true, errorMessage = ""};
   }

   tuple Success newMessage(string topic, tuple New new){
      int i;
      int topicIndex;
      arraySize = array_size();
      i = 0;
      //check whether array is full
      if (messageCount == arraySize) return 
        tuple{success = false, 
              errorMessage = "Internet is full, thanks to wig! <p> Please try again in another 15 years."};
      //find topic
      i = findTopic(topic);
      //if topic not found, error
      if (i == -1){
          tuple Success ok; 
          ok = tuple{success = false,errorMessage = ""};
          ok.errorMessage = "Error when creating messae: topic "+topic+" not found";
          return ok;
      }
      //insert new message
      messages = array_setString(messages,messageCount,new.message);
      messages = array_setInt(messages,messageCount,i); //point to previous last message
      usernames = array_setString(usernames,messageCount,new.username);
      topicIndex = array_getInt(usernames,i);
      usernames = array_setInt(usernames,messageCount,topicIndex);
      topics = array_setInt(topics,topicIndex,messageCount); //have topic point to new last message
      messageCount = messageCount+1;
      return tuple{success = true, errorMessage = ""};
   } int array_size() { return 100; }

tuple Array array_new() {
tuple Array a;
a = tuple {
i0 = 0, b0 = false, s0 = "" ,
i1 = 0, b1 = false, s1 = "" ,
i2 = 0, b2 = false, s2 = "" ,
i3 = 0, b3 = false, s3 = "" ,
i4 = 0, b4 = false, s4 = "" ,
i5 = 0, b5 = false, s5 = "" ,
i6 = 0, b6 = false, s6 = "" ,
i7 = 0, b7 = false, s7 = "" ,
i8 = 0, b8 = false, s8 = "" ,
i9 = 0, b9 = false, s9 = "" ,
i10 = 0, b10 = false, s10 = "" ,
i11 = 0, b11 = false, s11 = "" ,
i12 = 0, b12 = false, s12 = "" ,
i13 = 0, b13 = false, s13 = "" ,
i14 = 0, b14 = false, s14 = "" ,
i15 = 0, b15 = false, s15 = "" ,
i16 = 0, b16 = false, s16 = "" ,
i17 = 0, b17 = false, s17 = "" ,
i18 = 0, b18 = false, s18 = "" ,
i19 = 0, b19 = false, s19 = "" ,
i20 = 0, b20 = false, s20 = "" ,
i21 = 0, b21 = false, s21 = "" ,
i22 = 0, b22 = false, s22 = "" ,
i23 = 0, b23 = false, s23 = "" ,
i24 = 0, b24 = false, s24 = "" ,
i25 = 0, b25 = false, s25 = "" ,
i26 = 0, b26 = false, s26 = "" ,
i27 = 0, b27 = false, s27 = "" ,
i28 = 0, b28 = false, s28 = "" ,
i29 = 0, b29 = false, s29 = "" ,
i30 = 0, b30 = false, s30 = "" ,
i31 = 0, b31 = false, s31 = "" ,
i32 = 0, b32 = false, s32 = "" ,
i33 = 0, b33 = false, s33 = "" ,
i34 = 0, b34 = false, s34 = "" ,
i35 = 0, b35 = false, s35 = "" ,
i36 = 0, b36 = false, s36 = "" ,
i37 = 0, b37 = false, s37 = "" ,
i38 = 0, b38 = false, s38 = "" ,
i39 = 0, b39 = false, s39 = "" ,
i40 = 0, b40 = false, s40 = "" ,
i41 = 0, b41 = false, s41 = "" ,
i42 = 0, b42 = false, s42 = "" ,
i43 = 0, b43 = false, s43 = "" ,
i44 = 0, b44 = false, s44 = "" ,
i45 = 0, b45 = false, s45 = "" ,
i46 = 0, b46 = false, s46 = "" ,
i47 = 0, b47 = false, s47 = "" ,
i48 = 0, b48 = false, s48 = "" ,
i49 = 0, b49 = false, s49 = "" ,
i50 = 0, b50 = false, s50 = "" ,
i51 = 0, b51 = false, s51 = "" ,
i52 = 0, b52 = false, s52 = "" ,
i53 = 0, b53 = false, s53 = "" ,
i54 = 0, b54 = false, s54 = "" ,
i55 = 0, b55 = false, s55 = "" ,
i56 = 0, b56 = false, s56 = "" ,
i57 = 0, b57 = false, s57 = "" ,
i58 = 0, b58 = false, s58 = "" ,
i59 = 0, b59 = false, s59 = "" ,
i60 = 0, b60 = false, s60 = "" ,
i61 = 0, b61 = false, s61 = "" ,
i62 = 0, b62 = false, s62 = "" ,
i63 = 0, b63 = false, s63 = "" ,
i64 = 0, b64 = false, s64 = "" ,
i65 = 0, b65 = false, s65 = "" ,
i66 = 0, b66 = false, s66 = "" ,
i67 = 0, b67 = false, s67 = "" ,
i68 = 0, b68 = false, s68 = "" ,
i69 = 0, b69 = false, s69 = "" ,
i70 = 0, b70 = false, s70 = "" ,
i71 = 0, b71 = false, s71 = "" ,
i72 = 0, b72 = false, s72 = "" ,
i73 = 0, b73 = false, s73 = "" ,
i74 = 0, b74 = false, s74 = "" ,
i75 = 0, b75 = false, s75 = "" ,
i76 = 0, b76 = false, s76 = "" ,
i77 = 0, b77 = false, s77 = "" ,
i78 = 0, b78 = false, s78 = "" ,
i79 = 0, b79 = false, s79 = "" ,
i80 = 0, b80 = false, s80 = "" ,
i81 = 0, b81 = false, s81 = "" ,
i82 = 0, b82 = false, s82 = "" ,
i83 = 0, b83 = false, s83 = "" ,
i84 = 0, b84 = false, s84 = "" ,
i85 = 0, b85 = false, s85 = "" ,
i86 = 0, b86 = false, s86 = "" ,
i87 = 0, b87 = false, s87 = "" ,
i88 = 0, b88 = false, s88 = "" ,
i89 = 0, b89 = false, s89 = "" ,
i90 = 0, b90 = false, s90 = "" ,
i91 = 0, b91 = false, s91 = "" ,
i92 = 0, b92 = false, s92 = "" ,
i93 = 0, b93 = false, s93 = "" ,
i94 = 0, b94 = false, s94 = "" ,
i95 = 0, b95 = false, s95 = "" ,
i96 = 0, b96 = false, s96 = "" ,
i97 = 0, b97 = false, s97 = "" ,
i98 = 0, b98 = false, s98 = "" ,
i99 = 0, b99 = false, s99 = "" 
};
return a;
}
tuple IBS array_get(tuple Array a, int n) {
tuple IBS res;
if(n == 0) {
res.i = a.i0;
res.b = a.b0;
res.s = a.s0;
}
if(n == 1) {
res.i = a.i1;
res.b = a.b1;
res.s = a.s1;
}
if(n == 2) {
res.i = a.i2;
res.b = a.b2;
res.s = a.s2;
}
if(n == 3) {
res.i = a.i3;
res.b = a.b3;
res.s = a.s3;
}
if(n == 4) {
res.i = a.i4;
res.b = a.b4;
res.s = a.s4;
}
if(n == 5) {
res.i = a.i5;
res.b = a.b5;
res.s = a.s5;
}
if(n == 6) {
res.i = a.i6;
res.b = a.b6;
res.s = a.s6;
}
if(n == 7) {
res.i = a.i7;
res.b = a.b7;
res.s = a.s7;
}
if(n == 8) {
res.i = a.i8;
res.b = a.b8;
res.s = a.s8;
}
if(n == 9) {
res.i = a.i9;
res.b = a.b9;
res.s = a.s9;
}
if(n == 10) {
res.i = a.i10;
res.b = a.b10;
res.s = a.s10;
}
if(n == 11) {
res.i = a.i11;
res.b = a.b11;
res.s = a.s11;
}
if(n == 12) {
res.i = a.i12;
res.b = a.b12;
res.s = a.s12;
}
if(n == 13) {
res.i = a.i13;
res.b = a.b13;
res.s = a.s13;
}
if(n == 14) {
res.i = a.i14;
res.b = a.b14;
res.s = a.s14;
}
if(n == 15) {
res.i = a.i15;
res.b = a.b15;
res.s = a.s15;
}
if(n == 16) {
res.i = a.i16;
res.b = a.b16;
res.s = a.s16;
}
if(n == 17) {
res.i = a.i17;
res.b = a.b17;
res.s = a.s17;
}
if(n == 18) {
res.i = a.i18;
res.b = a.b18;
res.s = a.s18;
}
if(n == 19) {
res.i = a.i19;
res.b = a.b19;
res.s = a.s19;
}
if(n == 20) {
res.i = a.i20;
res.b = a.b20;
res.s = a.s20;
}
if(n == 21) {
res.i = a.i21;
res.b = a.b21;
res.s = a.s21;
}
if(n == 22) {
res.i = a.i22;
res.b = a.b22;
res.s = a.s22;
}
if(n == 23) {
res.i = a.i23;
res.b = a.b23;
res.s = a.s23;
}
if(n == 24) {
res.i = a.i24;
res.b = a.b24;
res.s = a.s24;
}
if(n == 25) {
res.i = a.i25;
res.b = a.b25;
res.s = a.s25;
}
if(n == 26) {
res.i = a.i26;
res.b = a.b26;
res.s = a.s26;
}
if(n == 27) {
res.i = a.i27;
res.b = a.b27;
res.s = a.s27;
}
if(n == 28) {
res.i = a.i28;
res.b = a.b28;
res.s = a.s28;
}
if(n == 29) {
res.i = a.i29;
res.b = a.b29;
res.s = a.s29;
}
if(n == 30) {
res.i = a.i30;
res.b = a.b30;
res.s = a.s30;
}
if(n == 31) {
res.i = a.i31;
res.b = a.b31;
res.s = a.s31;
}
if(n == 32) {
res.i = a.i32;
res.b = a.b32;
res.s = a.s32;
}
if(n == 33) {
res.i = a.i33;
res.b = a.b33;
res.s = a.s33;
}
if(n == 34) {
res.i = a.i34;
res.b = a.b34;
res.s = a.s34;
}
if(n == 35) {
res.i = a.i35;
res.b = a.b35;
res.s = a.s35;
}
if(n == 36) {
res.i = a.i36;
res.b = a.b36;
res.s = a.s36;
}
if(n == 37) {
res.i = a.i37;
res.b = a.b37;
res.s = a.s37;
}
if(n == 38) {
res.i = a.i38;
res.b = a.b38;
res.s = a.s38;
}
if(n == 39) {
res.i = a.i39;
res.b = a.b39;
res.s = a.s39;
}
if(n == 40) {
res.i = a.i40;
res.b = a.b40;
res.s = a.s40;
}
if(n == 41) {
res.i = a.i41;
res.b = a.b41;
res.s = a.s41;
}
if(n == 42) {
res.i = a.i42;
res.b = a.b42;
res.s = a.s42;
}
if(n == 43) {
res.i = a.i43;
res.b = a.b43;
res.s = a.s43;
}
if(n == 44) {
res.i = a.i44;
res.b = a.b44;
res.s = a.s44;
}
if(n == 45) {
res.i = a.i45;
res.b = a.b45;
res.s = a.s45;
}
if(n == 46) {
res.i = a.i46;
res.b = a.b46;
res.s = a.s46;
}
if(n == 47) {
res.i = a.i47;
res.b = a.b47;
res.s = a.s47;
}
if(n == 48) {
res.i = a.i48;
res.b = a.b48;
res.s = a.s48;
}
if(n == 49) {
res.i = a.i49;
res.b = a.b49;
res.s = a.s49;
}
if(n == 50) {
res.i = a.i50;
res.b = a.b50;
res.s = a.s50;
}
if(n == 51) {
res.i = a.i51;
res.b = a.b51;
res.s = a.s51;
}
if(n == 52) {
res.i = a.i52;
res.b = a.b52;
res.s = a.s52;
}
if(n == 53) {
res.i = a.i53;
res.b = a.b53;
res.s = a.s53;
}
if(n == 54) {
res.i = a.i54;
res.b = a.b54;
res.s = a.s54;
}
if(n == 55) {
res.i = a.i55;
res.b = a.b55;
res.s = a.s55;
}
if(n == 56) {
res.i = a.i56;
res.b = a.b56;
res.s = a.s56;
}
if(n == 57) {
res.i = a.i57;
res.b = a.b57;
res.s = a.s57;
}
if(n == 58) {
res.i = a.i58;
res.b = a.b58;
res.s = a.s58;
}
if(n == 59) {
res.i = a.i59;
res.b = a.b59;
res.s = a.s59;
}
if(n == 60) {
res.i = a.i60;
res.b = a.b60;
res.s = a.s60;
}
if(n == 61) {
res.i = a.i61;
res.b = a.b61;
res.s = a.s61;
}
if(n == 62) {
res.i = a.i62;
res.b = a.b62;
res.s = a.s62;
}
if(n == 63) {
res.i = a.i63;
res.b = a.b63;
res.s = a.s63;
}
if(n == 64) {
res.i = a.i64;
res.b = a.b64;
res.s = a.s64;
}
if(n == 65) {
res.i = a.i65;
res.b = a.b65;
res.s = a.s65;
}
if(n == 66) {
res.i = a.i66;
res.b = a.b66;
res.s = a.s66;
}
if(n == 67) {
res.i = a.i67;
res.b = a.b67;
res.s = a.s67;
}
if(n == 68) {
res.i = a.i68;
res.b = a.b68;
res.s = a.s68;
}
if(n == 69) {
res.i = a.i69;
res.b = a.b69;
res.s = a.s69;
}
if(n == 70) {
res.i = a.i70;
res.b = a.b70;
res.s = a.s70;
}
if(n == 71) {
res.i = a.i71;
res.b = a.b71;
res.s = a.s71;
}
if(n == 72) {
res.i = a.i72;
res.b = a.b72;
res.s = a.s72;
}
if(n == 73) {
res.i = a.i73;
res.b = a.b73;
res.s = a.s73;
}
if(n == 74) {
res.i = a.i74;
res.b = a.b74;
res.s = a.s74;
}
if(n == 75) {
res.i = a.i75;
res.b = a.b75;
res.s = a.s75;
}
if(n == 76) {
res.i = a.i76;
res.b = a.b76;
res.s = a.s76;
}
if(n == 77) {
res.i = a.i77;
res.b = a.b77;
res.s = a.s77;
}
if(n == 78) {
res.i = a.i78;
res.b = a.b78;
res.s = a.s78;
}
if(n == 79) {
res.i = a.i79;
res.b = a.b79;
res.s = a.s79;
}
if(n == 80) {
res.i = a.i80;
res.b = a.b80;
res.s = a.s80;
}
if(n == 81) {
res.i = a.i81;
res.b = a.b81;
res.s = a.s81;
}
if(n == 82) {
res.i = a.i82;
res.b = a.b82;
res.s = a.s82;
}
if(n == 83) {
res.i = a.i83;
res.b = a.b83;
res.s = a.s83;
}
if(n == 84) {
res.i = a.i84;
res.b = a.b84;
res.s = a.s84;
}
if(n == 85) {
res.i = a.i85;
res.b = a.b85;
res.s = a.s85;
}
if(n == 86) {
res.i = a.i86;
res.b = a.b86;
res.s = a.s86;
}
if(n == 87) {
res.i = a.i87;
res.b = a.b87;
res.s = a.s87;
}
if(n == 88) {
res.i = a.i88;
res.b = a.b88;
res.s = a.s88;
}
if(n == 89) {
res.i = a.i89;
res.b = a.b89;
res.s = a.s89;
}
if(n == 90) {
res.i = a.i90;
res.b = a.b90;
res.s = a.s90;
}
if(n == 91) {
res.i = a.i91;
res.b = a.b91;
res.s = a.s91;
}
if(n == 92) {
res.i = a.i92;
res.b = a.b92;
res.s = a.s92;
}
if(n == 93) {
res.i = a.i93;
res.b = a.b93;
res.s = a.s93;
}
if(n == 94) {
res.i = a.i94;
res.b = a.b94;
res.s = a.s94;
}
if(n == 95) {
res.i = a.i95;
res.b = a.b95;
res.s = a.s95;
}
if(n == 96) {
res.i = a.i96;
res.b = a.b96;
res.s = a.s96;
}
if(n == 97) {
res.i = a.i97;
res.b = a.b97;
res.s = a.s97;
}
if(n == 98) {
res.i = a.i98;
res.b = a.b98;
res.s = a.s98;
}
if(n == 99) {
res.i = a.i99;
res.b = a.b99;
res.s = a.s99;
}
return res;
}
tuple Array array_insert(tuple Array a, int n, tuple IBS val) {
if(n == 99) {
a.i99 = val.i;
a.b99 = val.b;
a.s99 = val.s;
}
if(n < 99) {
a.i99 = a.i98;
a.b99 = a.b98;
a.s99 = a.s98;
}
if(n == 98) {
a.i98 = val.i;
a.b98 = val.b;
a.s98 = val.s;
}
if(n < 98) {
a.i98 = a.i97;
a.b98 = a.b97;
a.s98 = a.s97;
}
if(n == 97) {
a.i97 = val.i;
a.b97 = val.b;
a.s97 = val.s;
}
if(n < 97) {
a.i97 = a.i96;
a.b97 = a.b96;
a.s97 = a.s96;
}
if(n == 96) {
a.i96 = val.i;
a.b96 = val.b;
a.s96 = val.s;
}
if(n < 96) {
a.i96 = a.i95;
a.b96 = a.b95;
a.s96 = a.s95;
}
if(n == 95) {
a.i95 = val.i;
a.b95 = val.b;
a.s95 = val.s;
}
if(n < 95) {
a.i95 = a.i94;
a.b95 = a.b94;
a.s95 = a.s94;
}
if(n == 94) {
a.i94 = val.i;
a.b94 = val.b;
a.s94 = val.s;
}
if(n < 94) {
a.i94 = a.i93;
a.b94 = a.b93;
a.s94 = a.s93;
}
if(n == 93) {
a.i93 = val.i;
a.b93 = val.b;
a.s93 = val.s;
}
if(n < 93) {
a.i93 = a.i92;
a.b93 = a.b92;
a.s93 = a.s92;
}
if(n == 92) {
a.i92 = val.i;
a.b92 = val.b;
a.s92 = val.s;
}
if(n < 92) {
a.i92 = a.i91;
a.b92 = a.b91;
a.s92 = a.s91;
}
if(n == 91) {
a.i91 = val.i;
a.b91 = val.b;
a.s91 = val.s;
}
if(n < 91) {
a.i91 = a.i90;
a.b91 = a.b90;
a.s91 = a.s90;
}
if(n == 90) {
a.i90 = val.i;
a.b90 = val.b;
a.s90 = val.s;
}
if(n < 90) {
a.i90 = a.i89;
a.b90 = a.b89;
a.s90 = a.s89;
}
if(n == 89) {
a.i89 = val.i;
a.b89 = val.b;
a.s89 = val.s;
}
if(n < 89) {
a.i89 = a.i88;
a.b89 = a.b88;
a.s89 = a.s88;
}
if(n == 88) {
a.i88 = val.i;
a.b88 = val.b;
a.s88 = val.s;
}
if(n < 88) {
a.i88 = a.i87;
a.b88 = a.b87;
a.s88 = a.s87;
}
if(n == 87) {
a.i87 = val.i;
a.b87 = val.b;
a.s87 = val.s;
}
if(n < 87) {
a.i87 = a.i86;
a.b87 = a.b86;
a.s87 = a.s86;
}
if(n == 86) {
a.i86 = val.i;
a.b86 = val.b;
a.s86 = val.s;
}
if(n < 86) {
a.i86 = a.i85;
a.b86 = a.b85;
a.s86 = a.s85;
}
if(n == 85) {
a.i85 = val.i;
a.b85 = val.b;
a.s85 = val.s;
}
if(n < 85) {
a.i85 = a.i84;
a.b85 = a.b84;
a.s85 = a.s84;
}
if(n == 84) {
a.i84 = val.i;
a.b84 = val.b;
a.s84 = val.s;
}
if(n < 84) {
a.i84 = a.i83;
a.b84 = a.b83;
a.s84 = a.s83;
}
if(n == 83) {
a.i83 = val.i;
a.b83 = val.b;
a.s83 = val.s;
}
if(n < 83) {
a.i83 = a.i82;
a.b83 = a.b82;
a.s83 = a.s82;
}
if(n == 82) {
a.i82 = val.i;
a.b82 = val.b;
a.s82 = val.s;
}
if(n < 82) {
a.i82 = a.i81;
a.b82 = a.b81;
a.s82 = a.s81;
}
if(n == 81) {
a.i81 = val.i;
a.b81 = val.b;
a.s81 = val.s;
}
if(n < 81) {
a.i81 = a.i80;
a.b81 = a.b80;
a.s81 = a.s80;
}
if(n == 80) {
a.i80 = val.i;
a.b80 = val.b;
a.s80 = val.s;
}
if(n < 80) {
a.i80 = a.i79;
a.b80 = a.b79;
a.s80 = a.s79;
}
if(n == 79) {
a.i79 = val.i;
a.b79 = val.b;
a.s79 = val.s;
}
if(n < 79) {
a.i79 = a.i78;
a.b79 = a.b78;
a.s79 = a.s78;
}
if(n == 78) {
a.i78 = val.i;
a.b78 = val.b;
a.s78 = val.s;
}
if(n < 78) {
a.i78 = a.i77;
a.b78 = a.b77;
a.s78 = a.s77;
}
if(n == 77) {
a.i77 = val.i;
a.b77 = val.b;
a.s77 = val.s;
}
if(n < 77) {
a.i77 = a.i76;
a.b77 = a.b76;
a.s77 = a.s76;
}
if(n == 76) {
a.i76 = val.i;
a.b76 = val.b;
a.s76 = val.s;
}
if(n < 76) {
a.i76 = a.i75;
a.b76 = a.b75;
a.s76 = a.s75;
}
if(n == 75) {
a.i75 = val.i;
a.b75 = val.b;
a.s75 = val.s;
}
if(n < 75) {
a.i75 = a.i74;
a.b75 = a.b74;
a.s75 = a.s74;
}
if(n == 74) {
a.i74 = val.i;
a.b74 = val.b;
a.s74 = val.s;
}
if(n < 74) {
a.i74 = a.i73;
a.b74 = a.b73;
a.s74 = a.s73;
}
if(n == 73) {
a.i73 = val.i;
a.b73 = val.b;
a.s73 = val.s;
}
if(n < 73) {
a.i73 = a.i72;
a.b73 = a.b72;
a.s73 = a.s72;
}
if(n == 72) {
a.i72 = val.i;
a.b72 = val.b;
a.s72 = val.s;
}
if(n < 72) {
a.i72 = a.i71;
a.b72 = a.b71;
a.s72 = a.s71;
}
if(n == 71) {
a.i71 = val.i;
a.b71 = val.b;
a.s71 = val.s;
}
if(n < 71) {
a.i71 = a.i70;
a.b71 = a.b70;
a.s71 = a.s70;
}
if(n == 70) {
a.i70 = val.i;
a.b70 = val.b;
a.s70 = val.s;
}
if(n < 70) {
a.i70 = a.i69;
a.b70 = a.b69;
a.s70 = a.s69;
}
if(n == 69) {
a.i69 = val.i;
a.b69 = val.b;
a.s69 = val.s;
}
if(n < 69) {
a.i69 = a.i68;
a.b69 = a.b68;
a.s69 = a.s68;
}
if(n == 68) {
a.i68 = val.i;
a.b68 = val.b;
a.s68 = val.s;
}
if(n < 68) {
a.i68 = a.i67;
a.b68 = a.b67;
a.s68 = a.s67;
}
if(n == 67) {
a.i67 = val.i;
a.b67 = val.b;
a.s67 = val.s;
}
if(n < 67) {
a.i67 = a.i66;
a.b67 = a.b66;
a.s67 = a.s66;
}
if(n == 66) {
a.i66 = val.i;
a.b66 = val.b;
a.s66 = val.s;
}
if(n < 66) {
a.i66 = a.i65;
a.b66 = a.b65;
a.s66 = a.s65;
}
if(n == 65) {
a.i65 = val.i;
a.b65 = val.b;
a.s65 = val.s;
}
if(n < 65) {
a.i65 = a.i64;
a.b65 = a.b64;
a.s65 = a.s64;
}
if(n == 64) {
a.i64 = val.i;
a.b64 = val.b;
a.s64 = val.s;
}
if(n < 64) {
a.i64 = a.i63;
a.b64 = a.b63;
a.s64 = a.s63;
}
if(n == 63) {
a.i63 = val.i;
a.b63 = val.b;
a.s63 = val.s;
}
if(n < 63) {
a.i63 = a.i62;
a.b63 = a.b62;
a.s63 = a.s62;
}
if(n == 62) {
a.i62 = val.i;
a.b62 = val.b;
a.s62 = val.s;
}
if(n < 62) {
a.i62 = a.i61;
a.b62 = a.b61;
a.s62 = a.s61;
}
if(n == 61) {
a.i61 = val.i;
a.b61 = val.b;
a.s61 = val.s;
}
if(n < 61) {
a.i61 = a.i60;
a.b61 = a.b60;
a.s61 = a.s60;
}
if(n == 60) {
a.i60 = val.i;
a.b60 = val.b;
a.s60 = val.s;
}
if(n < 60) {
a.i60 = a.i59;
a.b60 = a.b59;
a.s60 = a.s59;
}
if(n == 59) {
a.i59 = val.i;
a.b59 = val.b;
a.s59 = val.s;
}
if(n < 59) {
a.i59 = a.i58;
a.b59 = a.b58;
a.s59 = a.s58;
}
if(n == 58) {
a.i58 = val.i;
a.b58 = val.b;
a.s58 = val.s;
}
if(n < 58) {
a.i58 = a.i57;
a.b58 = a.b57;
a.s58 = a.s57;
}
if(n == 57) {
a.i57 = val.i;
a.b57 = val.b;
a.s57 = val.s;
}
if(n < 57) {
a.i57 = a.i56;
a.b57 = a.b56;
a.s57 = a.s56;
}
if(n == 56) {
a.i56 = val.i;
a.b56 = val.b;
a.s56 = val.s;
}
if(n < 56) {
a.i56 = a.i55;
a.b56 = a.b55;
a.s56 = a.s55;
}
if(n == 55) {
a.i55 = val.i;
a.b55 = val.b;
a.s55 = val.s;
}
if(n < 55) {
a.i55 = a.i54;
a.b55 = a.b54;
a.s55 = a.s54;
}
if(n == 54) {
a.i54 = val.i;
a.b54 = val.b;
a.s54 = val.s;
}
if(n < 54) {
a.i54 = a.i53;
a.b54 = a.b53;
a.s54 = a.s53;
}
if(n == 53) {
a.i53 = val.i;
a.b53 = val.b;
a.s53 = val.s;
}
if(n < 53) {
a.i53 = a.i52;
a.b53 = a.b52;
a.s53 = a.s52;
}
if(n == 52) {
a.i52 = val.i;
a.b52 = val.b;
a.s52 = val.s;
}
if(n < 52) {
a.i52 = a.i51;
a.b52 = a.b51;
a.s52 = a.s51;
}
if(n == 51) {
a.i51 = val.i;
a.b51 = val.b;
a.s51 = val.s;
}
if(n < 51) {
a.i51 = a.i50;
a.b51 = a.b50;
a.s51 = a.s50;
}
if(n == 50) {
a.i50 = val.i;
a.b50 = val.b;
a.s50 = val.s;
}
if(n < 50) {
a.i50 = a.i49;
a.b50 = a.b49;
a.s50 = a.s49;
}
if(n == 49) {
a.i49 = val.i;
a.b49 = val.b;
a.s49 = val.s;
}
if(n < 49) {
a.i49 = a.i48;
a.b49 = a.b48;
a.s49 = a.s48;
}
if(n == 48) {
a.i48 = val.i;
a.b48 = val.b;
a.s48 = val.s;
}
if(n < 48) {
a.i48 = a.i47;
a.b48 = a.b47;
a.s48 = a.s47;
}
if(n == 47) {
a.i47 = val.i;
a.b47 = val.b;
a.s47 = val.s;
}
if(n < 47) {
a.i47 = a.i46;
a.b47 = a.b46;
a.s47 = a.s46;
}
if(n == 46) {
a.i46 = val.i;
a.b46 = val.b;
a.s46 = val.s;
}
if(n < 46) {
a.i46 = a.i45;
a.b46 = a.b45;
a.s46 = a.s45;
}
if(n == 45) {
a.i45 = val.i;
a.b45 = val.b;
a.s45 = val.s;
}
if(n < 45) {
a.i45 = a.i44;
a.b45 = a.b44;
a.s45 = a.s44;
}
if(n == 44) {
a.i44 = val.i;
a.b44 = val.b;
a.s44 = val.s;
}
if(n < 44) {
a.i44 = a.i43;
a.b44 = a.b43;
a.s44 = a.s43;
}
if(n == 43) {
a.i43 = val.i;
a.b43 = val.b;
a.s43 = val.s;
}
if(n < 43) {
a.i43 = a.i42;
a.b43 = a.b42;
a.s43 = a.s42;
}
if(n == 42) {
a.i42 = val.i;
a.b42 = val.b;
a.s42 = val.s;
}
if(n < 42) {
a.i42 = a.i41;
a.b42 = a.b41;
a.s42 = a.s41;
}
if(n == 41) {
a.i41 = val.i;
a.b41 = val.b;
a.s41 = val.s;
}
if(n < 41) {
a.i41 = a.i40;
a.b41 = a.b40;
a.s41 = a.s40;
}
if(n == 40) {
a.i40 = val.i;
a.b40 = val.b;
a.s40 = val.s;
}
if(n < 40) {
a.i40 = a.i39;
a.b40 = a.b39;
a.s40 = a.s39;
}
if(n == 39) {
a.i39 = val.i;
a.b39 = val.b;
a.s39 = val.s;
}
if(n < 39) {
a.i39 = a.i38;
a.b39 = a.b38;
a.s39 = a.s38;
}
if(n == 38) {
a.i38 = val.i;
a.b38 = val.b;
a.s38 = val.s;
}
if(n < 38) {
a.i38 = a.i37;
a.b38 = a.b37;
a.s38 = a.s37;
}
if(n == 37) {
a.i37 = val.i;
a.b37 = val.b;
a.s37 = val.s;
}
if(n < 37) {
a.i37 = a.i36;
a.b37 = a.b36;
a.s37 = a.s36;
}
if(n == 36) {
a.i36 = val.i;
a.b36 = val.b;
a.s36 = val.s;
}
if(n < 36) {
a.i36 = a.i35;
a.b36 = a.b35;
a.s36 = a.s35;
}
if(n == 35) {
a.i35 = val.i;
a.b35 = val.b;
a.s35 = val.s;
}
if(n < 35) {
a.i35 = a.i34;
a.b35 = a.b34;
a.s35 = a.s34;
}
if(n == 34) {
a.i34 = val.i;
a.b34 = val.b;
a.s34 = val.s;
}
if(n < 34) {
a.i34 = a.i33;
a.b34 = a.b33;
a.s34 = a.s33;
}
if(n == 33) {
a.i33 = val.i;
a.b33 = val.b;
a.s33 = val.s;
}
if(n < 33) {
a.i33 = a.i32;
a.b33 = a.b32;
a.s33 = a.s32;
}
if(n == 32) {
a.i32 = val.i;
a.b32 = val.b;
a.s32 = val.s;
}
if(n < 32) {
a.i32 = a.i31;
a.b32 = a.b31;
a.s32 = a.s31;
}
if(n == 31) {
a.i31 = val.i;
a.b31 = val.b;
a.s31 = val.s;
}
if(n < 31) {
a.i31 = a.i30;
a.b31 = a.b30;
a.s31 = a.s30;
}
if(n == 30) {
a.i30 = val.i;
a.b30 = val.b;
a.s30 = val.s;
}
if(n < 30) {
a.i30 = a.i29;
a.b30 = a.b29;
a.s30 = a.s29;
}
if(n == 29) {
a.i29 = val.i;
a.b29 = val.b;
a.s29 = val.s;
}
if(n < 29) {
a.i29 = a.i28;
a.b29 = a.b28;
a.s29 = a.s28;
}
if(n == 28) {
a.i28 = val.i;
a.b28 = val.b;
a.s28 = val.s;
}
if(n < 28) {
a.i28 = a.i27;
a.b28 = a.b27;
a.s28 = a.s27;
}
if(n == 27) {
a.i27 = val.i;
a.b27 = val.b;
a.s27 = val.s;
}
if(n < 27) {
a.i27 = a.i26;
a.b27 = a.b26;
a.s27 = a.s26;
}
if(n == 26) {
a.i26 = val.i;
a.b26 = val.b;
a.s26 = val.s;
}
if(n < 26) {
a.i26 = a.i25;
a.b26 = a.b25;
a.s26 = a.s25;
}
if(n == 25) {
a.i25 = val.i;
a.b25 = val.b;
a.s25 = val.s;
}
if(n < 25) {
a.i25 = a.i24;
a.b25 = a.b24;
a.s25 = a.s24;
}
if(n == 24) {
a.i24 = val.i;
a.b24 = val.b;
a.s24 = val.s;
}
if(n < 24) {
a.i24 = a.i23;
a.b24 = a.b23;
a.s24 = a.s23;
}
if(n == 23) {
a.i23 = val.i;
a.b23 = val.b;
a.s23 = val.s;
}
if(n < 23) {
a.i23 = a.i22;
a.b23 = a.b22;
a.s23 = a.s22;
}
if(n == 22) {
a.i22 = val.i;
a.b22 = val.b;
a.s22 = val.s;
}
if(n < 22) {
a.i22 = a.i21;
a.b22 = a.b21;
a.s22 = a.s21;
}
if(n == 21) {
a.i21 = val.i;
a.b21 = val.b;
a.s21 = val.s;
}
if(n < 21) {
a.i21 = a.i20;
a.b21 = a.b20;
a.s21 = a.s20;
}
if(n == 20) {
a.i20 = val.i;
a.b20 = val.b;
a.s20 = val.s;
}
if(n < 20) {
a.i20 = a.i19;
a.b20 = a.b19;
a.s20 = a.s19;
}
if(n == 19) {
a.i19 = val.i;
a.b19 = val.b;
a.s19 = val.s;
}
if(n < 19) {
a.i19 = a.i18;
a.b19 = a.b18;
a.s19 = a.s18;
}
if(n == 18) {
a.i18 = val.i;
a.b18 = val.b;
a.s18 = val.s;
}
if(n < 18) {
a.i18 = a.i17;
a.b18 = a.b17;
a.s18 = a.s17;
}
if(n == 17) {
a.i17 = val.i;
a.b17 = val.b;
a.s17 = val.s;
}
if(n < 17) {
a.i17 = a.i16;
a.b17 = a.b16;
a.s17 = a.s16;
}
if(n == 16) {
a.i16 = val.i;
a.b16 = val.b;
a.s16 = val.s;
}
if(n < 16) {
a.i16 = a.i15;
a.b16 = a.b15;
a.s16 = a.s15;
}
if(n == 15) {
a.i15 = val.i;
a.b15 = val.b;
a.s15 = val.s;
}
if(n < 15) {
a.i15 = a.i14;
a.b15 = a.b14;
a.s15 = a.s14;
}
if(n == 14) {
a.i14 = val.i;
a.b14 = val.b;
a.s14 = val.s;
}
if(n < 14) {
a.i14 = a.i13;
a.b14 = a.b13;
a.s14 = a.s13;
}
if(n == 13) {
a.i13 = val.i;
a.b13 = val.b;
a.s13 = val.s;
}
if(n < 13) {
a.i13 = a.i12;
a.b13 = a.b12;
a.s13 = a.s12;
}
if(n == 12) {
a.i12 = val.i;
a.b12 = val.b;
a.s12 = val.s;
}
if(n < 12) {
a.i12 = a.i11;
a.b12 = a.b11;
a.s12 = a.s11;
}
if(n == 11) {
a.i11 = val.i;
a.b11 = val.b;
a.s11 = val.s;
}
if(n < 11) {
a.i11 = a.i10;
a.b11 = a.b10;
a.s11 = a.s10;
}
if(n == 10) {
a.i10 = val.i;
a.b10 = val.b;
a.s10 = val.s;
}
if(n < 10) {
a.i10 = a.i9;
a.b10 = a.b9;
a.s10 = a.s9;
}
if(n == 9) {
a.i9 = val.i;
a.b9 = val.b;
a.s9 = val.s;
}
if(n < 9) {
a.i9 = a.i8;
a.b9 = a.b8;
a.s9 = a.s8;
}
if(n == 8) {
a.i8 = val.i;
a.b8 = val.b;
a.s8 = val.s;
}
if(n < 8) {
a.i8 = a.i7;
a.b8 = a.b7;
a.s8 = a.s7;
}
if(n == 7) {
a.i7 = val.i;
a.b7 = val.b;
a.s7 = val.s;
}
if(n < 7) {
a.i7 = a.i6;
a.b7 = a.b6;
a.s7 = a.s6;
}
if(n == 6) {
a.i6 = val.i;
a.b6 = val.b;
a.s6 = val.s;
}
if(n < 6) {
a.i6 = a.i5;
a.b6 = a.b5;
a.s6 = a.s5;
}
if(n == 5) {
a.i5 = val.i;
a.b5 = val.b;
a.s5 = val.s;
}
if(n < 5) {
a.i5 = a.i4;
a.b5 = a.b4;
a.s5 = a.s4;
}
if(n == 4) {
a.i4 = val.i;
a.b4 = val.b;
a.s4 = val.s;
}
if(n < 4) {
a.i4 = a.i3;
a.b4 = a.b3;
a.s4 = a.s3;
}
if(n == 3) {
a.i3 = val.i;
a.b3 = val.b;
a.s3 = val.s;
}
if(n < 3) {
a.i3 = a.i2;
a.b3 = a.b2;
a.s3 = a.s2;
}
if(n == 2) {
a.i2 = val.i;
a.b2 = val.b;
a.s2 = val.s;
}
if(n < 2) {
a.i2 = a.i1;
a.b2 = a.b1;
a.s2 = a.s1;
}
if(n == 1) {
a.i1 = val.i;
a.b1 = val.b;
a.s1 = val.s;
}
if(n < 1) {
a.i1 = a.i0;
a.b1 = a.b0;
a.s1 = a.s0;
}
if(n == 0) {
a.i0 = val.i;
a.b0 = val.b;
a.s0 = val.s;
}
return a;
}
tuple Array array_set(tuple Array a, int n, tuple IBS val) {
if(n == 0) {
a.i0 = val.i;
a.b0 = val.b;
a.s0 = val.s;
}
if(n == 1) {
a.i1 = val.i;
a.b1 = val.b;
a.s1 = val.s;
}
if(n == 2) {
a.i2 = val.i;
a.b2 = val.b;
a.s2 = val.s;
}
if(n == 3) {
a.i3 = val.i;
a.b3 = val.b;
a.s3 = val.s;
}
if(n == 4) {
a.i4 = val.i;
a.b4 = val.b;
a.s4 = val.s;
}
if(n == 5) {
a.i5 = val.i;
a.b5 = val.b;
a.s5 = val.s;
}
if(n == 6) {
a.i6 = val.i;
a.b6 = val.b;
a.s6 = val.s;
}
if(n == 7) {
a.i7 = val.i;
a.b7 = val.b;
a.s7 = val.s;
}
if(n == 8) {
a.i8 = val.i;
a.b8 = val.b;
a.s8 = val.s;
}
if(n == 9) {
a.i9 = val.i;
a.b9 = val.b;
a.s9 = val.s;
}
if(n == 10) {
a.i10 = val.i;
a.b10 = val.b;
a.s10 = val.s;
}
if(n == 11) {
a.i11 = val.i;
a.b11 = val.b;
a.s11 = val.s;
}
if(n == 12) {
a.i12 = val.i;
a.b12 = val.b;
a.s12 = val.s;
}
if(n == 13) {
a.i13 = val.i;
a.b13 = val.b;
a.s13 = val.s;
}
if(n == 14) {
a.i14 = val.i;
a.b14 = val.b;
a.s14 = val.s;
}
if(n == 15) {
a.i15 = val.i;
a.b15 = val.b;
a.s15 = val.s;
}
if(n == 16) {
a.i16 = val.i;
a.b16 = val.b;
a.s16 = val.s;
}
if(n == 17) {
a.i17 = val.i;
a.b17 = val.b;
a.s17 = val.s;
}
if(n == 18) {
a.i18 = val.i;
a.b18 = val.b;
a.s18 = val.s;
}
if(n == 19) {
a.i19 = val.i;
a.b19 = val.b;
a.s19 = val.s;
}
if(n == 20) {
a.i20 = val.i;
a.b20 = val.b;
a.s20 = val.s;
}
if(n == 21) {
a.i21 = val.i;
a.b21 = val.b;
a.s21 = val.s;
}
if(n == 22) {
a.i22 = val.i;
a.b22 = val.b;
a.s22 = val.s;
}
if(n == 23) {
a.i23 = val.i;
a.b23 = val.b;
a.s23 = val.s;
}
if(n == 24) {
a.i24 = val.i;
a.b24 = val.b;
a.s24 = val.s;
}
if(n == 25) {
a.i25 = val.i;
a.b25 = val.b;
a.s25 = val.s;
}
if(n == 26) {
a.i26 = val.i;
a.b26 = val.b;
a.s26 = val.s;
}
if(n == 27) {
a.i27 = val.i;
a.b27 = val.b;
a.s27 = val.s;
}
if(n == 28) {
a.i28 = val.i;
a.b28 = val.b;
a.s28 = val.s;
}
if(n == 29) {
a.i29 = val.i;
a.b29 = val.b;
a.s29 = val.s;
}
if(n == 30) {
a.i30 = val.i;
a.b30 = val.b;
a.s30 = val.s;
}
if(n == 31) {
a.i31 = val.i;
a.b31 = val.b;
a.s31 = val.s;
}
if(n == 32) {
a.i32 = val.i;
a.b32 = val.b;
a.s32 = val.s;
}
if(n == 33) {
a.i33 = val.i;
a.b33 = val.b;
a.s33 = val.s;
}
if(n == 34) {
a.i34 = val.i;
a.b34 = val.b;
a.s34 = val.s;
}
if(n == 35) {
a.i35 = val.i;
a.b35 = val.b;
a.s35 = val.s;
}
if(n == 36) {
a.i36 = val.i;
a.b36 = val.b;
a.s36 = val.s;
}
if(n == 37) {
a.i37 = val.i;
a.b37 = val.b;
a.s37 = val.s;
}
if(n == 38) {
a.i38 = val.i;
a.b38 = val.b;
a.s38 = val.s;
}
if(n == 39) {
a.i39 = val.i;
a.b39 = val.b;
a.s39 = val.s;
}
if(n == 40) {
a.i40 = val.i;
a.b40 = val.b;
a.s40 = val.s;
}
if(n == 41) {
a.i41 = val.i;
a.b41 = val.b;
a.s41 = val.s;
}
if(n == 42) {
a.i42 = val.i;
a.b42 = val.b;
a.s42 = val.s;
}
if(n == 43) {
a.i43 = val.i;
a.b43 = val.b;
a.s43 = val.s;
}
if(n == 44) {
a.i44 = val.i;
a.b44 = val.b;
a.s44 = val.s;
}
if(n == 45) {
a.i45 = val.i;
a.b45 = val.b;
a.s45 = val.s;
}
if(n == 46) {
a.i46 = val.i;
a.b46 = val.b;
a.s46 = val.s;
}
if(n == 47) {
a.i47 = val.i;
a.b47 = val.b;
a.s47 = val.s;
}
if(n == 48) {
a.i48 = val.i;
a.b48 = val.b;
a.s48 = val.s;
}
if(n == 49) {
a.i49 = val.i;
a.b49 = val.b;
a.s49 = val.s;
}
if(n == 50) {
a.i50 = val.i;
a.b50 = val.b;
a.s50 = val.s;
}
if(n == 51) {
a.i51 = val.i;
a.b51 = val.b;
a.s51 = val.s;
}
if(n == 52) {
a.i52 = val.i;
a.b52 = val.b;
a.s52 = val.s;
}
if(n == 53) {
a.i53 = val.i;
a.b53 = val.b;
a.s53 = val.s;
}
if(n == 54) {
a.i54 = val.i;
a.b54 = val.b;
a.s54 = val.s;
}
if(n == 55) {
a.i55 = val.i;
a.b55 = val.b;
a.s55 = val.s;
}
if(n == 56) {
a.i56 = val.i;
a.b56 = val.b;
a.s56 = val.s;
}
if(n == 57) {
a.i57 = val.i;
a.b57 = val.b;
a.s57 = val.s;
}
if(n == 58) {
a.i58 = val.i;
a.b58 = val.b;
a.s58 = val.s;
}
if(n == 59) {
a.i59 = val.i;
a.b59 = val.b;
a.s59 = val.s;
}
if(n == 60) {
a.i60 = val.i;
a.b60 = val.b;
a.s60 = val.s;
}
if(n == 61) {
a.i61 = val.i;
a.b61 = val.b;
a.s61 = val.s;
}
if(n == 62) {
a.i62 = val.i;
a.b62 = val.b;
a.s62 = val.s;
}
if(n == 63) {
a.i63 = val.i;
a.b63 = val.b;
a.s63 = val.s;
}
if(n == 64) {
a.i64 = val.i;
a.b64 = val.b;
a.s64 = val.s;
}
if(n == 65) {
a.i65 = val.i;
a.b65 = val.b;
a.s65 = val.s;
}
if(n == 66) {
a.i66 = val.i;
a.b66 = val.b;
a.s66 = val.s;
}
if(n == 67) {
a.i67 = val.i;
a.b67 = val.b;
a.s67 = val.s;
}
if(n == 68) {
a.i68 = val.i;
a.b68 = val.b;
a.s68 = val.s;
}
if(n == 69) {
a.i69 = val.i;
a.b69 = val.b;
a.s69 = val.s;
}
if(n == 70) {
a.i70 = val.i;
a.b70 = val.b;
a.s70 = val.s;
}
if(n == 71) {
a.i71 = val.i;
a.b71 = val.b;
a.s71 = val.s;
}
if(n == 72) {
a.i72 = val.i;
a.b72 = val.b;
a.s72 = val.s;
}
if(n == 73) {
a.i73 = val.i;
a.b73 = val.b;
a.s73 = val.s;
}
if(n == 74) {
a.i74 = val.i;
a.b74 = val.b;
a.s74 = val.s;
}
if(n == 75) {
a.i75 = val.i;
a.b75 = val.b;
a.s75 = val.s;
}
if(n == 76) {
a.i76 = val.i;
a.b76 = val.b;
a.s76 = val.s;
}
if(n == 77) {
a.i77 = val.i;
a.b77 = val.b;
a.s77 = val.s;
}
if(n == 78) {
a.i78 = val.i;
a.b78 = val.b;
a.s78 = val.s;
}
if(n == 79) {
a.i79 = val.i;
a.b79 = val.b;
a.s79 = val.s;
}
if(n == 80) {
a.i80 = val.i;
a.b80 = val.b;
a.s80 = val.s;
}
if(n == 81) {
a.i81 = val.i;
a.b81 = val.b;
a.s81 = val.s;
}
if(n == 82) {
a.i82 = val.i;
a.b82 = val.b;
a.s82 = val.s;
}
if(n == 83) {
a.i83 = val.i;
a.b83 = val.b;
a.s83 = val.s;
}
if(n == 84) {
a.i84 = val.i;
a.b84 = val.b;
a.s84 = val.s;
}
if(n == 85) {
a.i85 = val.i;
a.b85 = val.b;
a.s85 = val.s;
}
if(n == 86) {
a.i86 = val.i;
a.b86 = val.b;
a.s86 = val.s;
}
if(n == 87) {
a.i87 = val.i;
a.b87 = val.b;
a.s87 = val.s;
}
if(n == 88) {
a.i88 = val.i;
a.b88 = val.b;
a.s88 = val.s;
}
if(n == 89) {
a.i89 = val.i;
a.b89 = val.b;
a.s89 = val.s;
}
if(n == 90) {
a.i90 = val.i;
a.b90 = val.b;
a.s90 = val.s;
}
if(n == 91) {
a.i91 = val.i;
a.b91 = val.b;
a.s91 = val.s;
}
if(n == 92) {
a.i92 = val.i;
a.b92 = val.b;
a.s92 = val.s;
}
if(n == 93) {
a.i93 = val.i;
a.b93 = val.b;
a.s93 = val.s;
}
if(n == 94) {
a.i94 = val.i;
a.b94 = val.b;
a.s94 = val.s;
}
if(n == 95) {
a.i95 = val.i;
a.b95 = val.b;
a.s95 = val.s;
}
if(n == 96) {
a.i96 = val.i;
a.b96 = val.b;
a.s96 = val.s;
}
if(n == 97) {
a.i97 = val.i;
a.b97 = val.b;
a.s97 = val.s;
}
if(n == 98) {
a.i98 = val.i;
a.b98 = val.b;
a.s98 = val.s;
}
if(n == 99) {
a.i99 = val.i;
a.b99 = val.b;
a.s99 = val.s;
}
return a;
}
/* end functions section */
/* begin session section */
   /* the session that is the forum */
   session Show(){
      bool isShowTopic; //false for show topiclist, true for show topic
      string currentTopic; //the topic to be displayed
      tuple Action action; //return from topic list
      tuple Success ok; //return for values
      arraySize = array_size();
      isShowTopic = false;
      currentTopic = "";
      ok.success = true;

      while(true){
         //error condition
         if (ok.success == false){
           show plug Error[errorMessage = ok.errorMessage];
           isShowTopic = false;
           ok.success = true;
	  } else {
           //show a topic
           if (isShowTopic){
             show plug Topic[messages = getTopic(currentTopic),topic = currentTopic,topic2 = currentTopic] 
                 receive [action.choice = choice, action.message = message, action.username = uname];
             if (action.choice == "create"){
                 ok = newMessage(currentTopic,action \- (choice)); //create new message in current topic
             }
             if (action.choice == "topics"){
                 isShowTopic = false;
             }
           //show the topic list
           } else {
             show plug TopicList[topics = getTopicList()] 
                 receive[action.username = uname,action.message = message, action.topic = subject, action.choice = choice];
             if (action.choice == "create"){
                ok = newTopic(action \+ (username,message,topic));//create new topic
             } else {
                if (action.choice != ""){
                  isShowTopic = true;
                  currentTopic = action.choice;
                }
             }
           }
         }
      }
      ;;
      exit plug Error[errorMessage = "GOOD BYE! (you should never see this)"];
   } /* end session section */
}
