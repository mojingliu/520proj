/* This file was generated by SableCC (http://www.sablecc.org/). */

package joosc.analysis;

import java.util.*;
import joosc.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable in;
    private Hashtable out;

    public Object getIn(Node node)
    {
        if(in == null)
        {
            return null;
        }

        return in.get(node);
    }

    public void setIn(Node node, Object in)
    {
        if(this.in == null)
        {
            this.in = new Hashtable(1);
        }

        if(in != null)
        {
            this.in.put(node, in);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(out == null)
        {
            return null;
        }

        return out.get(node);
    }

    public void setOut(Node node, Object out)
    {
        if(this.out == null)
        {
            this.out = new Hashtable(1);
        }

        if(out != null)
        {
            this.out.put(node, out);
        }
        else
        {
            this.out.remove(node);
        }
    }
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseADefaultClassfile(ADefaultClassfile node)
    {
        defaultCase(node);
    }

    public void caseAExternClassfile(AExternClassfile node)
    {
        defaultCase(node);
    }

    public void caseAClass(AClass node)
    {
        defaultCase(node);
    }

    public void caseAFinalClassmods(AFinalClassmods node)
    {
        defaultCase(node);
    }

    public void caseAAbstractClassmods(AAbstractClassmods node)
    {
        defaultCase(node);
    }

    public void caseAExternClass(AExternClass node)
    {
        defaultCase(node);
    }

    public void caseAExtension(AExtension node)
    {
        defaultCase(node);
    }

    public void caseAReferenceType(AReferenceType node)
    {
        defaultCase(node);
    }

    public void caseACharType(ACharType node)
    {
        defaultCase(node);
    }

    public void caseABooleanType(ABooleanType node)
    {
        defaultCase(node);
    }

    public void caseAIntType(AIntType node)
    {
        defaultCase(node);
    }

    public void caseAPolynullType(APolynullType node)
    {
        defaultCase(node);
    }

    public void caseAVoidType(AVoidType node)
    {
        defaultCase(node);
    }

    public void caseAFirstField(AFirstField node)
    {
        defaultCase(node);
    }

    public void caseAField(AField node)
    {
        defaultCase(node);
    }

    public void caseAOnefield(AOnefield node)
    {
        defaultCase(node);
    }

    public void caseAConstructor(AConstructor node)
    {
        defaultCase(node);
    }

    public void caseAExternConstructor(AExternConstructor node)
    {
        defaultCase(node);
    }

    public void caseAFormal(AFormal node)
    {
        defaultCase(node);
    }

    public void caseAModMethod(AModMethod node)
    {
        defaultCase(node);
    }

    public void caseANonmodMethod(ANonmodMethod node)
    {
        defaultCase(node);
    }

    public void caseAAbstractMethod(AAbstractMethod node)
    {
        defaultCase(node);
    }

    public void caseAMainMethod(AMainMethod node)
    {
        defaultCase(node);
    }

    public void caseAFinalMethodmods(AFinalMethodmods node)
    {
        defaultCase(node);
    }

    public void caseASynchronizedMethodmods(ASynchronizedMethodmods node)
    {
        defaultCase(node);
    }

    public void caseAMainargv(AMainargv node)
    {
        defaultCase(node);
    }

    public void caseAModExternMethod(AModExternMethod node)
    {
        defaultCase(node);
    }

    public void caseANonmodExternMethod(ANonmodExternMethod node)
    {
        defaultCase(node);
    }

    public void caseAFinalExternMethodmods(AFinalExternMethodmods node)
    {
        defaultCase(node);
    }

    public void caseAAbstractExternMethodmods(AAbstractExternMethodmods node)
    {
        defaultCase(node);
    }

    public void caseASynchronizedExternMethodmods(ASynchronizedExternMethodmods node)
    {
        defaultCase(node);
    }

    public void caseAVoidReturntype(AVoidReturntype node)
    {
        defaultCase(node);
    }

    public void caseANonvoidReturntype(ANonvoidReturntype node)
    {
        defaultCase(node);
    }

    public void caseASkipStm(ASkipStm node)
    {
        defaultCase(node);
    }

    public void caseABlockStm(ABlockStm node)
    {
        defaultCase(node);
    }

    public void caseAExpStm(AExpStm node)
    {
        defaultCase(node);
    }

    public void caseAReturnStm(AReturnStm node)
    {
        defaultCase(node);
    }

    public void caseADeclFirstStm(ADeclFirstStm node)
    {
        defaultCase(node);
    }

    public void caseADeclStm(ADeclStm node)
    {
        defaultCase(node);
    }

    public void caseASuperconsStm(ASuperconsStm node)
    {
        defaultCase(node);
    }

    public void caseAIfStm(AIfStm node)
    {
        defaultCase(node);
    }

    public void caseAIfelseStm(AIfelseStm node)
    {
        defaultCase(node);
    }

    public void caseAWhileStm(AWhileStm node)
    {
        defaultCase(node);
    }

    public void caseAOnelocal(AOnelocal node)
    {
        defaultCase(node);
    }

    public void caseAAssignExp(AAssignExp node)
    {
        defaultCase(node);
    }

    public void caseAOrExp(AOrExp node)
    {
        defaultCase(node);
    }

    public void caseAAndExp(AAndExp node)
    {
        defaultCase(node);
    }

    public void caseAEqExp(AEqExp node)
    {
        defaultCase(node);
    }

    public void caseANeqExp(ANeqExp node)
    {
        defaultCase(node);
    }

    public void caseALtExp(ALtExp node)
    {
        defaultCase(node);
    }

    public void caseAGtExp(AGtExp node)
    {
        defaultCase(node);
    }

    public void caseALeqExp(ALeqExp node)
    {
        defaultCase(node);
    }

    public void caseAGeqExp(AGeqExp node)
    {
        defaultCase(node);
    }

    public void caseAInstanceofExp(AInstanceofExp node)
    {
        defaultCase(node);
    }

    public void caseAPlusExp(APlusExp node)
    {
        defaultCase(node);
    }

    public void caseAMinusExp(AMinusExp node)
    {
        defaultCase(node);
    }

    public void caseAMultExp(AMultExp node)
    {
        defaultCase(node);
    }

    public void caseADivExp(ADivExp node)
    {
        defaultCase(node);
    }

    public void caseAModExp(AModExp node)
    {
        defaultCase(node);
    }

    public void caseAUminusExp(AUminusExp node)
    {
        defaultCase(node);
    }

    public void caseANotExp(ANotExp node)
    {
        defaultCase(node);
    }

    public void caseATmpcastExp(ATmpcastExp node)
    {
        defaultCase(node);
    }

    public void caseACastExp(ACastExp node)
    {
        defaultCase(node);
    }

    public void caseACasttocharExp(ACasttocharExp node)
    {
        defaultCase(node);
    }

    public void caseAIdExp(AIdExp node)
    {
        defaultCase(node);
    }

    public void caseAThisExp(AThisExp node)
    {
        defaultCase(node);
    }

    public void caseANewExp(ANewExp node)
    {
        defaultCase(node);
    }

    public void caseACallExp(ACallExp node)
    {
        defaultCase(node);
    }

    public void caseAIntconstExp(AIntconstExp node)
    {
        defaultCase(node);
    }

    public void caseATrueExp(ATrueExp node)
    {
        defaultCase(node);
    }

    public void caseAFalseExp(AFalseExp node)
    {
        defaultCase(node);
    }

    public void caseACharconstExp(ACharconstExp node)
    {
        defaultCase(node);
    }

    public void caseAStringconstExp(AStringconstExp node)
    {
        defaultCase(node);
    }

    public void caseANullExp(ANullExp node)
    {
        defaultCase(node);
    }

    public void caseAObjectReceiver(AObjectReceiver node)
    {
        defaultCase(node);
    }

    public void caseASuperReceiver(ASuperReceiver node)
    {
        defaultCase(node);
    }

    public void caseTAbstract(TAbstract node)
    {
        defaultCase(node);
    }

    public void caseTBoolean(TBoolean node)
    {
        defaultCase(node);
    }

    public void caseTBreak(TBreak node)
    {
        defaultCase(node);
    }

    public void caseTByte(TByte node)
    {
        defaultCase(node);
    }

    public void caseTCase(TCase node)
    {
        defaultCase(node);
    }

    public void caseTCatch(TCatch node)
    {
        defaultCase(node);
    }

    public void caseTChar(TChar node)
    {
        defaultCase(node);
    }

    public void caseTClass(TClass node)
    {
        defaultCase(node);
    }

    public void caseTConst(TConst node)
    {
        defaultCase(node);
    }

    public void caseTContinue(TContinue node)
    {
        defaultCase(node);
    }

    public void caseTDefault(TDefault node)
    {
        defaultCase(node);
    }

    public void caseTDo(TDo node)
    {
        defaultCase(node);
    }

    public void caseTDouble(TDouble node)
    {
        defaultCase(node);
    }

    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    public void caseTExtends(TExtends node)
    {
        defaultCase(node);
    }

    public void caseTExtern(TExtern node)
    {
        defaultCase(node);
    }

    public void caseTFinal(TFinal node)
    {
        defaultCase(node);
    }

    public void caseTFinally(TFinally node)
    {
        defaultCase(node);
    }

    public void caseTFloat(TFloat node)
    {
        defaultCase(node);
    }

    public void caseTFor(TFor node)
    {
        defaultCase(node);
    }

    public void caseTGoto(TGoto node)
    {
        defaultCase(node);
    }

    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    public void caseTImplements(TImplements node)
    {
        defaultCase(node);
    }

    public void caseTImport(TImport node)
    {
        defaultCase(node);
    }

    public void caseTIn(TIn node)
    {
        defaultCase(node);
    }

    public void caseTInstanceof(TInstanceof node)
    {
        defaultCase(node);
    }

    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    public void caseTInterface(TInterface node)
    {
        defaultCase(node);
    }

    public void caseTLong(TLong node)
    {
        defaultCase(node);
    }

    public void caseTMain(TMain node)
    {
        defaultCase(node);
    }

    public void caseTNative(TNative node)
    {
        defaultCase(node);
    }

    public void caseTNew(TNew node)
    {
        defaultCase(node);
    }

    public void caseTPackage(TPackage node)
    {
        defaultCase(node);
    }

    public void caseTPrivate(TPrivate node)
    {
        defaultCase(node);
    }

    public void caseTProtected(TProtected node)
    {
        defaultCase(node);
    }

    public void caseTPublic(TPublic node)
    {
        defaultCase(node);
    }

    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    public void caseTShort(TShort node)
    {
        defaultCase(node);
    }

    public void caseTStatic(TStatic node)
    {
        defaultCase(node);
    }

    public void caseTSuper(TSuper node)
    {
        defaultCase(node);
    }

    public void caseTSwitch(TSwitch node)
    {
        defaultCase(node);
    }

    public void caseTSynchronized(TSynchronized node)
    {
        defaultCase(node);
    }

    public void caseTThis(TThis node)
    {
        defaultCase(node);
    }

    public void caseTThrow(TThrow node)
    {
        defaultCase(node);
    }

    public void caseTThrows(TThrows node)
    {
        defaultCase(node);
    }

    public void caseTTransient(TTransient node)
    {
        defaultCase(node);
    }

    public void caseTTry(TTry node)
    {
        defaultCase(node);
    }

    public void caseTVoid(TVoid node)
    {
        defaultCase(node);
    }

    public void caseTVolatile(TVolatile node)
    {
        defaultCase(node);
    }

    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    public void caseTAssign(TAssign node)
    {
        defaultCase(node);
    }

    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    public void caseTLeq(TLeq node)
    {
        defaultCase(node);
    }

    public void caseTGeq(TGeq node)
    {
        defaultCase(node);
    }

    public void caseTNeq(TNeq node)
    {
        defaultCase(node);
    }

    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTInc(TInc node)
    {
        defaultCase(node);
    }

    public void caseTNull(TNull node)
    {
        defaultCase(node);
    }

    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    public void caseTCharconst(TCharconst node)
    {
        defaultCase(node);
    }

    public void caseTIntconst(TIntconst node)
    {
        defaultCase(node);
    }

    public void caseTStringconst(TStringconst node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTImportpath(TImportpath node)
    {
        defaultCase(node);
    }

    public void caseTBlanks(TBlanks node)
    {
        defaultCase(node);
    }

    public void caseTEolComment(TEolComment node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(Node node)
    {
    }
}
