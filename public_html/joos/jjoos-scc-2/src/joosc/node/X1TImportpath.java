/* This file was generated by SableCC (http://www.sablecc.org/). */

package joosc.node;

import joosc.analysis.*;

public final class X1TImportpath extends XTImportpath
{
    private XTImportpath _xTImportpath_;
    private TImportpath _tImportpath_;

    public X1TImportpath()
    {
    }

    public X1TImportpath(
        XTImportpath _xTImportpath_,
        TImportpath _tImportpath_)
    {
        setXTImportpath(_xTImportpath_);
        setTImportpath(_tImportpath_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XTImportpath getXTImportpath()
    {
        return _xTImportpath_;
    }

    public void setXTImportpath(XTImportpath node)
    {
        if(_xTImportpath_ != null)
        {
            _xTImportpath_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xTImportpath_ = node;
    }

    public TImportpath getTImportpath()
    {
        return _tImportpath_;
    }

    public void setTImportpath(TImportpath node)
    {
        if(_tImportpath_ != null)
        {
            _tImportpath_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _tImportpath_ = node;
    }

    void removeChild(Node child)
    {
        if(_xTImportpath_ == child)
        {
            _xTImportpath_ = null;
        }

        if(_tImportpath_ == child)
        {
            _tImportpath_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xTImportpath_) +
            toString(_tImportpath_);
    }
}
