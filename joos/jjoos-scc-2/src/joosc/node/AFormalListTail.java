/* This file was generated by SableCC (http://www.sablecc.org/). */

package joosc.node;

import java.util.*;
import joosc.analysis.*;

public final class AFormalListTail extends PFormalListTail
{
    private TComma _comma_;
    private PFormal _formal_;

    public AFormalListTail()
    {
    }

    public AFormalListTail(
        TComma _comma_,
        PFormal _formal_)
    {
        setComma(_comma_);

        setFormal(_formal_);

    }
    public Object clone()
    {
        return new AFormalListTail(
            (TComma) cloneNode(_comma_),
            (PFormal) cloneNode(_formal_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFormalListTail(this);
    }

    public TComma getComma()
    {
        return _comma_;
    }

    public void setComma(TComma node)
    {
        if(_comma_ != null)
        {
            _comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _comma_ = node;
    }

    public PFormal getFormal()
    {
        return _formal_;
    }

    public void setFormal(PFormal node)
    {
        if(_formal_ != null)
        {
            _formal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _formal_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_comma_)
            + toString(_formal_);
    }

    void removeChild(Node child)
    {
        if(_comma_ == child)
        {
            _comma_ = null;
            return;
        }

        if(_formal_ == child)
        {
            _formal_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(_formal_ == oldChild)
        {
            setFormal((PFormal) newChild);
            return;
        }

    }
}
