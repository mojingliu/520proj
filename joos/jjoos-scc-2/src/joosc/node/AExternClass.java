/* This file was generated by SableCC (http://www.sablecc.org/). */

package joosc.node;

import java.util.*;
import joosc.analysis.*;

public final class AExternClass extends PExternClass
{
    private TExtern _extern_;
    private TPublic _public_;
    private PClassmods _classmods_;
    private TClass _tClass_;
    private TIdentifier _identifier_;
    private PExtension _extension_;
    private TIn _in_;
    private TStringconst _stringconst_;
    private TLBrace _lBrace_;
    private final LinkedList _externConstructor_ = new TypedLinkedList(new ExternConstructor_Cast());
    private final LinkedList _externMethod_ = new TypedLinkedList(new ExternMethod_Cast());
    private TRBrace _rBrace_;

    public AExternClass()
    {
    }

    public AExternClass(
        TExtern _extern_,
        TPublic _public_,
        PClassmods _classmods_,
        TClass _tClass_,
        TIdentifier _identifier_,
        PExtension _extension_,
        TIn _in_,
        TStringconst _stringconst_,
        TLBrace _lBrace_,
        List _externConstructor_,
        List _externMethod_,
        TRBrace _rBrace_)
    {
        setExtern(_extern_);

        setPublic(_public_);

        setClassmods(_classmods_);

        setTClass(_tClass_);

        setIdentifier(_identifier_);

        setExtension(_extension_);

        setIn(_in_);

        setStringconst(_stringconst_);

        setLBrace(_lBrace_);

        {
            this._externConstructor_.clear();
            this._externConstructor_.addAll(_externConstructor_);
        }

        {
            this._externMethod_.clear();
            this._externMethod_.addAll(_externMethod_);
        }

        setRBrace(_rBrace_);

    }

    public AExternClass(
        TExtern _extern_,
        TPublic _public_,
        PClassmods _classmods_,
        TClass _tClass_,
        TIdentifier _identifier_,
        PExtension _extension_,
        TIn _in_,
        TStringconst _stringconst_,
        TLBrace _lBrace_,
        XPExternConstructor _externConstructor_,
        XPExternMethod _externMethod_,
        TRBrace _rBrace_)
    {
        setExtern(_extern_);

        setPublic(_public_);

        setClassmods(_classmods_);

        setTClass(_tClass_);

        setIdentifier(_identifier_);

        setExtension(_extension_);

        setIn(_in_);

        setStringconst(_stringconst_);

        setLBrace(_lBrace_);

        if(_externConstructor_ != null)
        {
            while(_externConstructor_ instanceof X1PExternConstructor)
            {
                this._externConstructor_.addFirst(((X1PExternConstructor) _externConstructor_).getPExternConstructor());
                _externConstructor_ = ((X1PExternConstructor) _externConstructor_).getXPExternConstructor();
            }
            this._externConstructor_.addFirst(((X2PExternConstructor) _externConstructor_).getPExternConstructor());
        }

        if(_externMethod_ != null)
        {
            while(_externMethod_ instanceof X1PExternMethod)
            {
                this._externMethod_.addFirst(((X1PExternMethod) _externMethod_).getPExternMethod());
                _externMethod_ = ((X1PExternMethod) _externMethod_).getXPExternMethod();
            }
            this._externMethod_.addFirst(((X2PExternMethod) _externMethod_).getPExternMethod());
        }

        setRBrace(_rBrace_);

    }
    public Object clone()
    {
        return new AExternClass(
            (TExtern) cloneNode(_extern_),
            (TPublic) cloneNode(_public_),
            (PClassmods) cloneNode(_classmods_),
            (TClass) cloneNode(_tClass_),
            (TIdentifier) cloneNode(_identifier_),
            (PExtension) cloneNode(_extension_),
            (TIn) cloneNode(_in_),
            (TStringconst) cloneNode(_stringconst_),
            (TLBrace) cloneNode(_lBrace_),
            cloneList(_externConstructor_),
            cloneList(_externMethod_),
            (TRBrace) cloneNode(_rBrace_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExternClass(this);
    }

    public TExtern getExtern()
    {
        return _extern_;
    }

    public void setExtern(TExtern node)
    {
        if(_extern_ != null)
        {
            _extern_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _extern_ = node;
    }

    public TPublic getPublic()
    {
        return _public_;
    }

    public void setPublic(TPublic node)
    {
        if(_public_ != null)
        {
            _public_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _public_ = node;
    }

    public PClassmods getClassmods()
    {
        return _classmods_;
    }

    public void setClassmods(PClassmods node)
    {
        if(_classmods_ != null)
        {
            _classmods_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _classmods_ = node;
    }

    public TClass getTClass()
    {
        return _tClass_;
    }

    public void setTClass(TClass node)
    {
        if(_tClass_ != null)
        {
            _tClass_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _tClass_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public PExtension getExtension()
    {
        return _extension_;
    }

    public void setExtension(PExtension node)
    {
        if(_extension_ != null)
        {
            _extension_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _extension_ = node;
    }

    public TIn getIn()
    {
        return _in_;
    }

    public void setIn(TIn node)
    {
        if(_in_ != null)
        {
            _in_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _in_ = node;
    }

    public TStringconst getStringconst()
    {
        return _stringconst_;
    }

    public void setStringconst(TStringconst node)
    {
        if(_stringconst_ != null)
        {
            _stringconst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _stringconst_ = node;
    }

    public TLBrace getLBrace()
    {
        return _lBrace_;
    }

    public void setLBrace(TLBrace node)
    {
        if(_lBrace_ != null)
        {
            _lBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lBrace_ = node;
    }

    public LinkedList getExternConstructor()
    {
        return _externConstructor_;
    }

    public void setExternConstructor(List list)
    {
        _externConstructor_.clear();
        _externConstructor_.addAll(list);
    }

    public LinkedList getExternMethod()
    {
        return _externMethod_;
    }

    public void setExternMethod(List list)
    {
        _externMethod_.clear();
        _externMethod_.addAll(list);
    }

    public TRBrace getRBrace()
    {
        return _rBrace_;
    }

    public void setRBrace(TRBrace node)
    {
        if(_rBrace_ != null)
        {
            _rBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rBrace_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_extern_)
            + toString(_public_)
            + toString(_classmods_)
            + toString(_tClass_)
            + toString(_identifier_)
            + toString(_extension_)
            + toString(_in_)
            + toString(_stringconst_)
            + toString(_lBrace_)
            + toString(_externConstructor_)
            + toString(_externMethod_)
            + toString(_rBrace_);
    }

    void removeChild(Node child)
    {
        if(_extern_ == child)
        {
            _extern_ = null;
            return;
        }

        if(_public_ == child)
        {
            _public_ = null;
            return;
        }

        if(_classmods_ == child)
        {
            _classmods_ = null;
            return;
        }

        if(_tClass_ == child)
        {
            _tClass_ = null;
            return;
        }

        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

        if(_extension_ == child)
        {
            _extension_ = null;
            return;
        }

        if(_in_ == child)
        {
            _in_ = null;
            return;
        }

        if(_stringconst_ == child)
        {
            _stringconst_ = null;
            return;
        }

        if(_lBrace_ == child)
        {
            _lBrace_ = null;
            return;
        }

        if(_externConstructor_.remove(child))
        {
            return;
        }

        if(_externMethod_.remove(child))
        {
            return;
        }

        if(_rBrace_ == child)
        {
            _rBrace_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_extern_ == oldChild)
        {
            setExtern((TExtern) newChild);
            return;
        }

        if(_public_ == oldChild)
        {
            setPublic((TPublic) newChild);
            return;
        }

        if(_classmods_ == oldChild)
        {
            setClassmods((PClassmods) newChild);
            return;
        }

        if(_tClass_ == oldChild)
        {
            setTClass((TClass) newChild);
            return;
        }

        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(_extension_ == oldChild)
        {
            setExtension((PExtension) newChild);
            return;
        }

        if(_in_ == oldChild)
        {
            setIn((TIn) newChild);
            return;
        }

        if(_stringconst_ == oldChild)
        {
            setStringconst((TStringconst) newChild);
            return;
        }

        if(_lBrace_ == oldChild)
        {
            setLBrace((TLBrace) newChild);
            return;
        }

        for(ListIterator i = _externConstructor_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        for(ListIterator i = _externMethod_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(_rBrace_ == oldChild)
        {
            setRBrace((TRBrace) newChild);
            return;
        }

    }

    private class ExternConstructor_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PExternConstructor node = (PExternConstructor) o;

            if((node.parent() != null) &&
                (node.parent() != AExternClass.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != AExternClass.this))
            {
                node.parent(AExternClass.this);
            }

            return node;
        }
    }

    private class ExternMethod_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PExternMethod node = (PExternMethod) o;

            if((node.parent() != null) &&
                (node.parent() != AExternClass.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != AExternClass.this))
            {
                node.parent(AExternClass.this);
            }

            return node;
        }
    }
}
